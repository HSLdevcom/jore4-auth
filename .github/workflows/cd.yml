name: CD

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  run_unit_tests:
    name: Run unit tests
    uses: ./.github/workflows/ci.yml

  check_code_formatting:
    name: Check code is formatted with ktlint
    uses: ./.github/workflows/ktlint.yml

  publish_docker_image_to_docker_hub:
    needs:
      - run_unit_tests
      - check_code_formatting
    name: Build & Push docker image to dockerhub
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract metadata to env variables
        uses: HSLdevcom/jore4-tools/github-actions/extract-metadata@extract-metadata-v1

      - name: Pull previous image to support caching
        run: docker pull $IMAGE_NAME:builder || echo "Previous builder image not found"

      - name: Build dependencies & source code into builder image to support caching
        run: docker build --cache-from=$IMAGE_NAME:builder --target builder -t $IMAGE_NAME:builder .

      - name: Build docker image for distribution
        run: docker build --cache-from=$IMAGE_NAME:builder --cache-from=$IMAGE_NAME:latest -t $IMAGE_NAME:dev --build-arg NEXT_PUBLIC_GIT_HASH=$GITHUB_SHA .

      - name: Tag docker image as 'latest'
        if: ${{ github.ref == 'refs/heads/main' }}
        run: docker tag $IMAGE_NAME:dev $IMAGE_NAME:latest

      - name: Tag docker image as '<branch_name>-<git_commit_sha>'
        run: docker tag $IMAGE_NAME:dev $IMAGE_NAME:$COMMIT_ID

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.JORE4_DOCKERHUB_USER }}
          password: ${{ secrets.JORE4_DOCKERHUB_TOKEN }}

      - name: Push image tagged with git commit details to Docker Hub
        run: docker push $IMAGE_NAME:$COMMIT_ID

      - name: Push rest of the tags to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker push $IMAGE_NAME:builder
          docker push $IMAGE_NAME:latest

  publish_docker_image_to_acr:
    needs:
      - run_unit_tests
      - check_code_formatting
    name: Publish Docker image to ACR
    permissions:
      id-token: write
      contents: read
    uses: HSLdevcom/jore4-tools/.github/workflows/shared-build-and-publish-docker-image.yml@shared-build-and-publish-docker-image-v1
    with:
      docker_image_name: jore4-auth
    secrets:
      azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  run_e2e_tests:
    needs:
      - run_unit_tests
      - check_code_formatting
      - publish_docker_image_to_acr
    name: Run e2e tests
    runs-on: ubuntu-24.04
    steps:
      - name: Run e2e tests
        uses: HSLdevcom/jore4-tools/github-actions/run-ci@main
        with:
          auth_version: "${{ needs.publish_docker_image_to_acr.outputs.docker_image }}"
