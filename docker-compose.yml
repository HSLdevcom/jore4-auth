---
version: "3.8"
services:
  ui:
    container_name: ui
    image: hsldevcom/jore4-ui:fix-docker-css--72224fc7574d8fb4486b43d8abc6afcf1b7f14c6
    restart: "unless-stopped"
    ports:
      - "127.0.0.1:3302:80"
    networks:
      - jore4

  postgres:
    image: "postgres:12.3-alpine"
    restart: "unless-stopped"
    volumes:
      - ./docker/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    networks:
      - jore4
    ports:
      - "127.0.0.1:6432:5432"
    env_file:
      - ./docker/postgres.env
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "${POSTGRES_USER:-postgres}"]
      interval: 30s
      start_period: 5s
      timeout: 10s
      retries: 3

  auth:
    container_name: auth
    build: .
    restart: "unless-stopped"
    depends_on:
      - postgres
    networks:
      - jore4
    ports:
      - "127.0.0.1:3200:8080"
    environment:
      API_PATH_PREFIX: "/api"
      API_PATH_PREFIX_PUBLIC: "/api/auth"
      SECRET_STORE_BASE_PATH: "/run/secrets"
      SELF_PUBLIC_BASE_URL: "http://localhost:3301"
      LOGINPAGE_URL: "http://localhost:3301"
      LOGOUTPAGE_URL: "http://localhost:3301"
      OIDC_PROVIDER_BASE_URL: "https://hslid-dev.t5.fi"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/auth_session"
    env_file:
      - ./docker/postgres.env
    secrets:
    - oidc-client-id
    - oidc-client-secret

  proxy:
    container_name: proxy
    image: nginx:alpine
    restart: "unless-stopped"
    depends_on:
      - auth
      - ui
    volumes:
      - $PWD/nginx-proxy/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - jore4
    ports:
      - 3301:80

networks:
    jore4:

secrets:
  oidc-client-id:
    file: ./secrets/oidc-client-id
  oidc-client-secret:
    file: ./secrets/oidc-client-secret
